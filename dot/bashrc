CFG_PATH="${HOME}/dotfiles"

### begin homebrew
export HOMEBREW_PREFIX="/opt/homebrew";
export HOMEBREW_CELLAR="/opt/homebrew/Cellar";
export HOMEBREW_REPOSITORY="/opt/homebrew";
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
export MANPATH="/opt/homebrew/share/man${MANPATH+:$MANPATH}:";
export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}";
### end homebrew

export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$HOME/.npm-packages/bin:$HOME/go/bin"

export GOPATH="$HOME/go"

export PAGER="less"
# Use vim as default editor
export EDITOR=vim

if [[ $(uname) == "Darwin" ]] ; then
    # export JAVA_HOME=/Library/Java/JavaVirtualMachines/current/Contents/Home
    export JAVA_HOME=/Applications/Android\ Studio.app/Contents/jre/jdk/Contents/Home
fi

if command -v asdf &>/dev/null ; then
  . "$(brew --prefix asdf)/libexec/asdf.sh"
fi

# System- and app-defined paths
if [ -x /usr/libexec/path_helper ]; then
	eval `/usr/libexec/path_helper -s`
fi

# bash-completion@2
export BASH_COMPLETION_COMPAT_DIR="/opt/homebrew/etc/bash_completion.d"
[[ -r "/opt/homebrew/etc/profile.d/bash_completion.sh" ]] && . "/opt/homebrew/etc/profile.d/bash_completion.sh"

bind 'set completion-ignore-case on'

# Bash prompt colors
# Black: 30
# Blue: 34
# Cyan: 36
# Green: 32
# Purple: 35
# Red: 31
# White: 37
# Yellow: 33
# reset: 00
#  \[\033[CCm\] e.g. \[\033[35m\] for purple

GIT_PS1_SHOWDIRTYSTATE=y
GIT_PS1_SHOWCOLORHINTS=y
GIT_PS1_SHOWUNTRACKEDFILES=y
PROMPT_COMMAND='__git_ps1 "\[\033[36m\]\u@\h\[\033[37m\]:\[\033[00m\]\w" "\n\[\033[36m\]\$ \[\033[00m\]" " on \[\033[37m\]git\[\033[00m\]:%s"'

## Command history
# Append and reload new command history at every prompt
#PROMPT_COMMAND="history -a ; history -n ; $PROMPT_COMMAND"
HISTSIZE=10000
HISTFILESIZE=10000
HISTTIMEFORMAT="%Y-%m-%d %T "

source ${CFG_PATH}/shell/aliases.sh

# [ -f ~/.fzf.bash ] && source ~/.fzf.bash

# [ -f ~/.bash.local ] && source ~/.bash.local
if [ -z "$SSH_AUTH_SOCK" ] ; then
	eval "$(ssh-agent -s)"
	# ssh-add ~/.ssh/
fi

HOMEDIR_INCLUDES=".fzf.bash .bash.local"

for include in ${HOMEDIR_INCLUDES}; do
	[ -f "${HOME}/${include}" ] && source "${HOME}/${include}"
done
